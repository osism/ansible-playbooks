---
- name: Label nodes
  hosts:
    - "{{ hosts_manager|default(groups['manager'][0])|default('localhost') }}"
  connection: local
  gather_facts: false

  tasks:
    - name: Add openstack-control-plane label to all hosts labeled control-plane
      ansible.builtin.shell: |
        set -o pipefail

        export KUBECONFIG=/share/kubeconfig

        OS_CONTROL_PLANE_NODES=$(kubectl get nodes | grep control-plane | awk '{print $1}')
        for NODE in $OS_CONTROL_PLANE_NODES; do
            kubectl label node "${NODE}" openstack-control-plane=enabled
        done
      args:
        executable: /bin/bash
      changed_when: false

    - name: Add worker node-role label to all hosts without a role
      ansible.builtin.shell: |
        set -o pipefail

        export KUBECONFIG=/share/kubeconfig

        NODES_WITHOUT_ROLE=$(kubectl get nodes | grep '<none>' | awk '{print $1}')
        for NODE in $NODES_WITHOUT_ROLE; do
            kubectl label node "${NODE}" node-role.kubernetes.io/worker=worker
        done
      args:
        executable: /bin/bash
      changed_when: false

    - name: Add control-plane label to all hosts in group control
      ansible.builtin.shell: |
        set -o pipefail

        export KUBECONFIG=/share/kubeconfig
        kubectl label node "{{ item.split('.')[0] }}" node-role.osism.tech/control-plane=true
      args:
        executable: /bin/bash
      changed_when: false
      loop: "{{ groups[hosts_control | default('control')] }}"

    - name: Add compute-plane label to all hosts in group compute
      ansible.builtin.shell: |
        set -o pipefail

        export KUBECONFIG=/share/kubeconfig
        kubectl label node "{{ item.split('.')[0] }}" node-role.osism.tech/compute-plane=true
      args:
        executable: /bin/bash
      changed_when: false
      loop: "{{ groups[hosts_compute | default('compute')] }}"

    - name: Add network-plane label to all hosts in group network
      ansible.builtin.shell: |
        set -o pipefail

        export KUBECONFIG=/share/kubeconfig
        kubectl label node "{{ item.split('.')[0] }}" node-role.osism.tech/network-plane=true
      args:
        executable: /bin/bash
      changed_when: false
      loop: "{{ groups[hosts_network | default('network')] }}"

    - name: Add management-plane label to all hosts in group manager
      ansible.builtin.shell: |
        set -o pipefail

        export KUBECONFIG=/share/kubeconfig
        kubectl label node "{{ item.split('.')[0] }}" node-role.osism.tech/management-plane=true
      args:
        executable: /bin/bash
      changed_when: false
      loop: "{{ groups[hosts_manager | default('manager')] }}"

    - name: Add monitoring-plane label to all hosts in group monitoring
      ansible.builtin.shell: |
        set -o pipefail

        export KUBECONFIG=/share/kubeconfig
        kubectl label node "{{ item.split('.')[0] }}" node-role.osism.tech/monitoring-plane=true
      args:
        executable: /bin/bash
      changed_when: false
      loop: "{{ groups[hosts_monitoring | default('monitoring')] }}"
