---
- name: Upgrade k3s cluster
  hosts: "{{ hosts_k3s_upgrade|default('k3s_all') }}"
  gather_facts: false
  environment: "{{ k3s_proxy_env | default({}) }}"

  vars:
    k3s_throttle_restart: 1

  tasks:
    - name: Get k3s installed version
      ansible.builtin.command: k3s --version
      register: k3s_version_output
      changed_when: false

    - name: Set k3s_installed_version fact
      ansible.builtin.set_fact:
        k3s_installed_version: "{{ k3s_version_output.stdout_lines[0].split(' ')[2] }}"

    - name: Update node only if needed
      when: k3s_installed_version is version(k3s_version, '<')
      block:  # noqa: osism-fqcn
        - name: Download k3s binary
          become: true
          ansible.builtin.get_url:
            url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s
            checksum: "sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-amd64.txt"
            dest: /usr/local/bin/k3s
            owner: root
            group: root
            mode: 0755

        - name: Restart k3s service
          become: true
          ansible.builtin.systemd_service:
            name: k3s
            state: restarted
          throttle: "{{ k3s_throttle_restart }}"
          when: "'k3s_master' in group_names"

        - name: Restart k3s-node service
          become: true
          ansible.builtin.systemd_service:
            name: k3s-node
            state: restarted
          throttle: "{{ k3s_throttle_restart }}"
          when: "'k3s_node' in group_names"
