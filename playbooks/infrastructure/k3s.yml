---
- name: Prepare all k3s nodes
  hosts: "{{ hosts_k3s_all|default('k3s_all') }}"
  gather_facts: false

  roles:
    - name: Apply role k3s_prereq
      become: true
      role: k3s_prereq

    - name: Apply role k3s_download
      become: true
      role: k3s_download

- name: Deploy k3s master nodes
  hosts: "{{ hosts_k3s_master|default('k3s_master') }}"
  gather_facts: false

  roles:
    - name: Apply role k3s_server
      become: true
      role: k3s_server

- name: Deploy k3s worker nodes
  hosts: "{{ hosts_k3s_node|default('k3s_node') }}"
  gather_facts: false

  roles:
    - name: Apply role k3s_agent
      become: true
      role: k3s_agent

- name: Run post actions on master nodes
  hosts: "{{ hosts_k3s_master|default('k3s_master') }}"
  gather_facts: false

  roles:
    - name: Apply role k3s_server_post
      become: true
      role: k3s_server_post

- name: Run kubeconfig play
  ansible.builtin.import_playbook: /ansible/infrastructure/kubeconfig.yml  # noqa: syntax-check[missing-file]

- name: Label nodes
  hosts: localhost
  connection: local

  tasks:
    - name: Add openstack-control-plane label to all hosts labeled control-plane
      ansible.builtin.shell: |
        set -o pipefail

        export KUBECONFIG=/share/kubeconfig

        OS_CONTROL_PLANE_NODES=$(kubectl get nodes | grep control-plane | awk '{print $1}')
        for NODE in $OS_CONTROL_PLANE_NODES; do
            kubectl label node "${NODE}" openstack-control-plane=enabled
        done
      args:
        executable: /bin/bash
      changed_when: false

    - name: Add worker node-role label to all hosts without a role
      ansible.builtin.shell: |
        set -o pipefail

        export KUBECONFIG=/share/kubeconfig

        NODES_WITHOUT_ROLE=$(kubectl get nodes | grep '<none>' | awk '{print $1}')
        for NODE in $NODES_WITHOUT_ROLE; do
            kubectl label node "${NODE}" node-role.kubernetes.io/worker=worker
        done
      args:
        executable: /bin/bash
      changed_when: false
