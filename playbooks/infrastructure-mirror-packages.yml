---
- hosts: mirror

  tasks:
  - name: Import gpg key
    command: "docker exec -t aptly_aptly_1 bash -c 'wget -q -O - {{ item }} | gpg --no-default-keyring --keyring trustedkeys.gpg --import'"
    loop: "{{ aptly_repository_keys }}"
    tags: import-gpg-key

  - name: Add repository
    command: "docker exec -t aptly_aptly_1 bash -c 'aptly mirror create -architectures={{ item.architecture }} {{ item.name }} {{ item.repository }}'"
    loop: "{{ aptly_repositories }}"
    register: result_add_repository
    changed_when:
      - "'successfully added' in result_add_repository.stdout"
    failed_when:
      - "'already exists' not in result_add_repository.stdout and 'successfully added' not in result_add_repository.stdout"
    tags: add-repository

  - name: Update repository
    command: "docker exec -t aptly_aptly_1 bash -c 'aptly mirror update -force=true -skip-existing-packages -max-tries=3 {{ item.name }}'"
    loop: "{{ aptly_repositories }}"
    register: result_update_repository
    changed_when:
      - "'successfully updated' in result_update_repository.stdout and 'Download queue: 0 items (0 B)' not in result_update_repository.stdout"
    tags: update-repository

  - name: Create snapshot
    command: "docker exec -t aptly_aptly_1 bash -c 'aptly snapshot create {{ item.name }}-{{ ansible_date_time.date }} from mirror {{ item.name }}'"
    loop: "{{ aptly_repositories }}"
    register: result_create_snapshot
    changed_when:
      - "'successfully created' in result_create_snapshot.stdout"
    failed_when:
      - "'already exists' not in result_create_snapshot.stdout and 'successfully created' not in result_create_snapshot.stdout"
    tags: create-snapshot

  - name: Publish snapshot
    command: "docker exec -t aptly_aptly_1 bash -c 'aptly publish snapshot -passphrase=$GPG_PASSWORD -batch=true -distribution={{ item.name }} {{ item.name }}-{{ ansible_date_time.date }} ubuntu'"  # noqa 204
    loop: "{{ aptly_repositories }}"
    register: result_publish_snapshot
    changed_when:
      - "'successfully published' in result_publish_snapshot.stdout"
    failed_when:
      - "'already used by another published repo' not in result_publish_snapshot.stdout and 'successfully published' not in result_publish_snapshot.stdout"
    tags: publish-snapshot

  - name: Switch published snapshot
    command: "docker exec -t aptly_aptly_1 bash -c 'aptly publish switch -passphrase=$GPG_PASSWORD -batch=true {{ item.name }} ubuntu {{ item.name }}-{{ ansible_date_time.date }}'"  # noqa 204
    loop: "{{ aptly_repositories }}"
    register: result_switch_snapshot
    # when: "'already used by another published repo' in result_publish_snapshot.stdout"
    changed_when:
      - "'successfully switched' in result_switch_snapshot.stdout"
    tags: publish-snapshot

  - name: Copy aptly.pub file
    command: "docker exec -t aptly_aptly_1 bash -c 'cp /opt/aptly/aptly.pub /opt/aptly/public/aptly.pub'"
