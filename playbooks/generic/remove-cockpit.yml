---
- name: Group hosts based on configuration
  hosts: all
  gather_facts: false

  tasks:
    - name: Group hosts based on enabled services
      ansible.builtin.group_by:
        key: "{{ item }}"
      with_items:
        - enable_cockpit_{{ enable_cockpit | default('true') | bool }}
      tags: always
      changed_when: false

- name: Remove cockpit
  hosts:
    - "{{ hosts_cockpit|default('all') }}"
    - "&enable_cockpit_True"
  serial: "{{ osism_serial['cockpit']|default(osism_serial_default)|default(0) }}"
  strategy: "{{ osism_strategy|default('linear') }}"

  tasks:
    - name: Stop/disable services  # noqa: ignore-errors
      become: true
      ansible.builtin.systemd:
        enabled: false
        state: stopped
        name: "{{ item }}"
      loop:
        - cockpit
        - cockpit.socket
      ignore_errors: true

    - name: Remove packages
      become: true
      ansible.builtin.apt:
        name: "{{ item }}"
        state: absent
        lock_timeout: "{{ apt_lock_timeout | default(300) }}"
      loop:
        - cockpit-bridge
        - cockpit-storaged
        - cockpit-system
        - cockpit-dashboard
        - cockpit-ws

    - name: Remove directories
      become: true
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/systemd/system/cockpit.socket.d
        - /etc/cockpit
