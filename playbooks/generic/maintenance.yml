---
- name: Group hosts based on state bootstrap
  ignore_unreachable: true
  hosts: "{{ hosts_maintenance|default('all') }}"
  gather_facts: false
  tasks:
    - name: Group hosts based on state bootstrap
      group_by:
        key: state_bootstrap_{{ ansible_local.osism.bootstrap.status|default("False")|bool }}

- name: Group hosts based on reachability
  ignore_unreachable: true
  hosts: state_bootstrap_True
  gather_facts: false
  tasks:
    - name: Check if host is reachable
      command: ping -c1 {{ inventory_hostname }}
      delegate_to: localhost
      register: result
      ignore_errors: true

    - name: Group hosts based on reachability
      group_by:
        key: reachable
      when: result is success

- name: Gather facts for all hosts
  ignore_unreachable: true
  hosts: reachable
  gather_facts: false
  strategy: "{{ osism_strategy|default('linear') }}"

  tasks:
    - name: Gathers facts about hosts
      setup:

- name: Gather facts for all hosts (if using --limit)
  hosts: reachable
  gather_facts: false
  strategy: "{{ osism_strategy|default('linear') }}"
  tasks:
    - name: Gathers facts about hosts
      setup:
      delegate_facts: true
      delegate_to: "{{ item }}"
      with_items: "{{ groups['reachable'] }}"
      when:
        - (play_hosts | length) != (groups['reachable'] | length)

- name: Apply maintenance roles
  hosts: reachable
  serial: "{{ osism_serial_default|default(0) }}"
  strategy: "{{ osism_strategy|default('free') }}"

  collections:
    - osism.commons
    - osism.services

  roles:
    - role: hostname
    - role: hosts
    - role: proxy
    - role: resolvconf
    - role: repository
    - role: rsyslog
    - role: systohc
    - role: configfs
    - role: packages
    - role: sysctl
    - role: services
    - role: motd
    - role: hddtemp
    - role: rng
    - role: smartd
    - role: cleanup
    - role: timezone
    - role: docker
    - role: facts
    - role: chrony
    - role: hardening
      become: true
    - role: auditd
    - role: journald
