---
- name: Cleanup databases
  hosts: control[0]
  gather_facts: false

  vars:
    database_heat_retention_time: 30
    database_nova_retention_time: 180

    database_heat_cleanup: true
    database_nova_cleanup: true
    database_panko_cleanup: true

    database_cleanup_timeout: 1200

  tasks:
    - name: "Purge heat db entries older than {{ database_heat_retention_time }} days"
      ansible.builtin.command: "docker exec heat_api heat-manage purge_deleted -g days {{ database_heat_retention_time }}"
      async: "{{ database_cleanup_timeout }}"
      poll: 5
      tags: heat
      when: database_heat_cleanup|bool

    - name: Clean dead heat engine records
      ansible.builtin.command: docker exec heat_api heat-manage service clean
      async: "{{ database_cleanup_timeout }}"
      poll: 5
      tags: heat
      when: database_heat_cleanup|bool

    - name: Delete expired panko events
      ansible.builtin.command: docker exec panko_api panko-expirer
      async: "{{ database_cleanup_timeout }}"
      poll: 5
      tags: panko
      when: database_panko_cleanup|bool

    - name: Move deleted rows from nova production tables to shadow tables
      ansible.builtin.command: docker exec nova_api nova-manage db archive_deleted_rows --until-complete
      register: result
      changed_when: result.rc == 1
      failed_when: result.rc > 1
      async: "{{ database_cleanup_timeout }}"
      poll: 5
      tags: nova
      when: database_nova_cleanup|bool

    - name: "Delete rows from nova shadow tables older than {{ database_nova_retention_time }} days"
      ansible.builtin.command: "docker exec nova_api nova-manage db purge --before {{ '%Y-%m-%d' | strftime( ( ansible_date_time.epoch | int ) - ( 86400 *  database_nova_retention_time | int) ) }}"  # noqa 204
      register: result
      changed_when: result.rc == 0
      failed_when: result.rc > 0
      async: "{{ database_cleanup_timeout }}"
      poll: 5
      tags: nova
      when: database_nova_cleanup|bool

    - name: Delete nova database records where instance_uuid is NULL
      ansible.builtin.command: docker exec nova_api nova-manage db null_instance_uuid_scan --delete
      async: "{{ database_cleanup_timeout }}"
      poll: 5
      tags: nova
      when: database_nova_cleanup|bool
