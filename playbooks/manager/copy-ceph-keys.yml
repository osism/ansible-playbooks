---
- name: Copy ceph keys to the configuration repository
  hosts: manager

  vars:
    ceph_custom_keys: []
    ceph_infrastructure_keys:
      - src: ceph.client.admin.keyring
        dest: "{{ configuration_directory }}/environments/infrastructure/files/ceph/ceph.client.admin.keyring"
    ceph_kolla_keys:
      - src: ceph.client.cinder.keyring
        dest: "{{ configuration_directory }}/environments/kolla/files/overlays/cinder/cinder-volume/ceph.client.cinder.keyring"

      - src: ceph.client.cinder.keyring
        dest: "{{ configuration_directory }}/environments/kolla/files/overlays/cinder/cinder-backup/ceph.client.cinder.keyring"

      - src: ceph.client.cinder-backup.keyring
        dest: "{{ configuration_directory }}/environments/kolla/files/overlays/cinder/cinder-backup/ceph.client.cinder-backup.keyring"

      - src: ceph.client.cinder.keyring
        dest: "{{ configuration_directory }}/environments/kolla/files/overlays/nova/ceph.client.cinder.keyring"

      - src: ceph.client.nova.keyring
        dest: "{{ configuration_directory }}/environments/kolla/files/overlays/nova/ceph.client.nova.keyring"

      - src: ceph.client.glance.keyring
        dest: "{{ configuration_directory }}/environments/kolla/files/overlays/glance/ceph.client.glance.keyring"

      - src: ceph.client.gnocchi.keyring
        dest: "{{ configuration_directory }}/environments/kolla/files/overlays/gnocchi/ceph.client.gnocchi.keyring"

      - src: ceph.client.manila.keyring
        dest: "{{ configuration_directory }}/environments/kolla/files/overlays/manila/ceph.client.manila.keyring"

  tasks:
    - name: Check if ceph keys exist
      become: true
      ansible.builtin.stat:
        path: "/etc/ceph/{{ item.src }}"
      register: _ceph_key_files
      loop: "{{ ceph_infrastructure_keys + ceph_kolla_keys + ceph_custom_keys }}"
      delegate_to: "{{ groups[mon_group_name] | first }}"
      loop_control:
        label: "{{ item.src }}"

    - name: Fetch all ceph keys
      become: true
      ansible.builtin.slurp:
        src: "/etc/ceph/{{ item.item.src }}"
      register: _remote_ceph_keys
      when: item.stat.exists and item.stat.isreg
      loop: "{{ _ceph_key_files.results }}"
      delegate_to: "{{ groups[mon_group_name] | first }}"
      loop_control:
        label: "{{ item.item.src }}"

    - name: Create share directory
      ansible.builtin.file:
        path: "/share/{{ ceph_cluster_fsid }}/etc/ceph"
        owner: dragon
        group: dragon
        state: directory
        mode: 0750
      delegate_to: localhost

    - name: Write ceph keys to the share directory
      ansible.builtin.copy:
        content: "{{ item.content | b64decode }}"
        dest: "/share/{{ ceph_cluster_fsid }}/etc/ceph/{{ item.item.item.src }}"
        owner: dragon
        group: dragon
        mode: 0640
      when: not item.skipped | default(false) and not item.failed | default(false)
      delegate_to: localhost
      loop: "{{ _remote_ceph_keys.results }}"
      loop_control:
        label: "{{ item.item.item.src }}"

    - name: Check if target directories exist
      ansible.builtin.stat:
        path: "{{ item.dest | dirname }}"
      register: _target_directories
      loop: "{{ ceph_infrastructure_keys + ceph_kolla_keys + ceph_custom_keys }}"
      loop_control:
        label: "{{ item.dest | dirname }}"

    - name: Write ceph keys to the configuration directory
      ansible.builtin.copy:
        content: "{{ item.0.content | b64decode }}"
        dest: "{{ item.0.item.item.dest }}"
        owner: dragon
        group: dragon
        mode: 0640
      when:
        - not item.0.skipped | default(false)
        - not item.0.failed | default(false)
        - item.1.stat.exists and item.1.stat.isdir
      loop: "{{ _remote_ceph_keys.results | zip(_target_directories.results) | list }}"
      loop_control:
        label: "{{ item.0.item.item.src }}"
