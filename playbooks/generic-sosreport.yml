---
# NOTE(berendt): Transfer this into a osism.sosreport role

- name: Collect sosreports
  hosts: all
  gather_facts: false
  strategy: "{{ osism_strategy|default('linear') }}"

  vars:
    sosreport_unarchive: false
    sosreport_tmpdir: /tmp/sosreport
    sosreport_cmd: sosreport
    required_packages_sosreport:
      - sosreport
    sosreport_name: "{{ inventory_hostname_short }}-{{ ansible_date_time.date }}"
    sosreport_archive_filename: "{{ sosreport_name }}.tar.gz"
    sosreport_archive_directory: "/archive/sosreport/{{ ansible_date_time.date }}"
    sosreport_plugins:
      - apt
      - auditd
      - block
      - devices
      - docker
      - dpkg
      - filesys
      - hardware
      - kernel
      - kvm
      - last
      - md
      - memory
      - networking
      - pci
      - process
      - processor
      - python
      - services
      - ssh
      - system
      - systemd
      - ubuntu
      - udev
      - usb
      - xfs

  tasks:
    - name: sosreport - install required packages
      package:
        name: "{{ item }}"
        state: present
      become: true
      loop: "{{ required_packages_sosreport }}"

    - name: sosreport - remove temporary directory
      file:
        path: "{{ sosreport_tmpdir }}"
        state: absent
      become: true

    - name: sosreport - create required directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ operator_user }}"
        group: "{{ operator_group }}"
        mode: 0755
      become: true
      loop:
        - "{{ sosreport_tmpdir }}"

    # FIXME(berendt): Use file module
    - name: sosreport - create local required directories
      local_action: "shell mkdir -p {{ sosreport_archive_directory }}"
      run_once: true

    - name: sosreport - generate report
      command: "sosreport --batch --tmp-dir {{ sosreport_tmpdir }} -z gzip --name {{ inventory_hostname_short }} -o {{ sosreport_plugins|join(',') }}"
      become: true

    - name: sosreport - rename md5 file
      shell: "mv -f {{ sosreport_tmpdir }}/*.md5 {{ sosreport_tmpdir }}/{{ sosreport_archive_filename }}.md5"

    - name: sosreport - rename archive
      shell: "mv -f {{ sosreport_tmpdir }}/*.tar.gz {{ sosreport_tmpdir }}/{{ sosreport_archive_filename }}"

    - name: sosreport - fetch md5 file
      fetch:
        src: "{{ sosreport_tmpdir }}/{{ sosreport_archive_filename }}.md5"
        dest: "{{ sosreport_archive_directory }}/{{ sosreport_archive_filename }}.md5"
        flat: true
      become: true

    - name: sosreport - fetch archive
      fetch:
        src: "{{ sosreport_tmpdir }}/{{ sosreport_archive_filename }}"
        dest: "{{ sosreport_archive_directory }}/{{ sosreport_archive_filename }}"
        flat: true
      become: true

    # FIXME(berendt): use file module
    - name: sosreport - create archive directory
      local_action: "shell mkdir {{ sosreport_archive_directory }}/{{ sosreport_name }}"
      when: sosreport_unarchive

    # FIXME(berendt): use unarchive module
    - name: sosreport - unarchive archive
      local_action: "shell tar xvzf {{ sosreport_archive_directory }}/{{ sosreport_archive_filename }} -C {{ sosreport_archive_directory }}/{{ sosreport_name }} --strip-components=1"  # noqa 204
      when: sosreport_unarchive

    - name: sosreport - remove temporary directory
      file:
        path: "{{ sosreport_tmpdir }}"
        state: absent
      become: true
